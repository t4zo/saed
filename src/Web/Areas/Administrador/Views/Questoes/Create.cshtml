@model QuestaoViewModel

@{
    ViewData["Title"] = "Adicionar Questão";
}

@section Styles {
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">

    <style>
        #enunciadoEditor {
            height: 170px;
        }

        .alternativas .ql-container {
            height: 45px;
        }
    </style>
}

<main class="uk-card uk-card-default uk-card-body">
    <div class="uk-flex uk-flex-between uk-flex-bottom">
        <a class="uk-icon-button uk-button-default" asp-action="Index" uk-icon="arrow-left"></a>
        <span class="uk-card-title uk-text-uppercase uk-text-center">Adicionar Questão</span>
        <button class="uk-icon-button uk-button-primary" uk-icon="check" onclick="submitForm()"></button>
    </div>
    <hr class="uk-list-divider" />
    <form asp-action="Create" class="form">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <section class="uk-grid-row-small" uk-grid>
            <div class="uk-width-1-3">
                <label class="uk-form-label">Disciplina</label>
                <select id="Disciplinas" asp-items="ViewBag.DisciplinaId" class="uk-select @(ViewContext.ViewData.ModelState.ContainsKey("EtapaDisciplina") ? "uk-form-danger" : string.Empty)">
                    <option value="">---------</option>
                </select>
            </div>
            <div class="uk-width-1-3">
                <label class="uk-form-label">Tema</label>
                <select id="Temas" class="uk-select" disabled>
                    <option value="">---------</option>
                </select>
            </div>
            <div class="uk-width-1-3">
                <label class="uk-form-label">Descritores</label>
                <select asp-for="DescritorId" class="uk-select" disabled>
                    <option value="">---------</option>
                </select>
            </div>
            <div class="uk-width-1-3">
                <label class="uk-form-label">Etapa</label>
                <select asp-for="EtapaId" asp-items="ViewBag.EtapaId" class="uk-select @(ViewContext.ViewData.ModelState.ContainsKey("EtapaDisciplina") ? "uk-form-danger" : string.Empty)"></select>
                <span asp-validation-for="EtapaId" class="uk-text-danger"></span>
            </div>
            <div class="uk-width-1-3">
                <label asp-for="Item" class="uk-form-label"></label>
                <input asp-for="Item" class="uk-input" />
                <span asp-validation-for="Item" class="text-danger"></span>
            </div>
            <div class="uk-width-1-3">
                <label asp-for="Descricao" class="uk-form-label">Descrição</label>
                <input asp-for="Descricao" class="uk-input" />
                <span asp-validation-for="Descricao" class="uk-text-danger"></span>
            </div>
            <div class="uk-width-1-3 uk-flex uk-flex-middle uk-margin-top">
                <input class="uk-checkbox uk-margin-small-right" asp-for="Habilitada" style="width: 25px; height: 25px;" />
                <label asp-for="Habilitada" class="uk-form-label"></label>
            </div>
            <div class="uk-width-1-1 uk-margin-top">
                <h2 class="uk-text-center">Enunciado</h2>
                <!-- Create the editor container -->
                <div id="enunciadoEditor"></div>
            </div>
            <input type="hidden" asp-for="Enunciado" />
        </section>
        @*<hr class="uk-list-divider" />*@
        <section class="uk-margin-large-top uk-margin-bottom alternativas">
            <h3 class="uk-text-center">Alternativas</h3>
            <div class="uk-grid selectCheckboxAsRadio" uk-grid>
                @for (int i = 0; i < 4; i++)
                {
                    <div class="uk-width-1-2">
                        <div class="uk-flex uk-flex-between">
                            <p class="uk-text-center">@(i+1)º Alternativa</p>
                            <label>Correta <input class="uk-checkbox" type="checkbox" asp-for="Alternativas[i].Correta" onchange="selectCheckboxAsRadio(@i)"></label>
                        </div>
                        <div id="alternativa@(i)Editor"></div>
                        <input type="hidden" asp-for="Alternativas[i].Descricao" class="uk-input" />
                    </div>
                }
                @*<div class="uk-width-1-1 uk-flex-between">
                        <div class="uk-flex uk-flex-between">
                            <p class="uk-text-center">Alternativa E</p>
                            <label>Correta <input class="uk-checkbox" type="checkbox" asp-for="Alternativas[4].Correta" onchange="selectCheckboxAsRadio(4)"></label>
                        </div>
                        <div id="alternativaEEditor"></div>
                        <input type="hidden" asp-for="Alternativas[4].Descricao" class="uk-input" />
                    </div>*@
            </div>
        </section>
    </form>
</main>

@section Scripts {
    <script type="text/javascript" src="~/scripts/filterNestedFields.js"></script>
    <script type="text/javascript" src="~/scripts/selectCheckboxAsRadio.js"></script>

    <!-- Include the Quill library -->
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="~/libs/quill-image-resize/image-resize.min.js"></script>

    <script>
        let quillAlternativa0Editor;
        let quillAlternativa1Editor;
        let quillAlternativa2Editor;
        let quillAlternativa3Editor;
        let quillAlternativa4Editor;

        document.addEventListener("DOMContentLoaded", () => {
            const disciplinaField = document.querySelector("#Disciplinas");
            const temaField = document.querySelector("#Temas");
            const descritorField = document.querySelector("#DescritorId");

            disciplinaField.addEventListener("change", () => {
                filterNestedFields(disciplinaField.value, "/api/v1/temasapi?id", "#Temas");
                temaField.selectedIndex = 0;
                temaField.disabled = true;
            });

            temaField.addEventListener("change", () => {
                filterNestedFields(temaField.value, "/api/v1/descritoresapi?id", "#DescritorId");
                descritorField.selectedIndex = 0;
                descritorField.disabled = true;
            });

        });

        const toolbarOptions = [
            ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
            ['blockquote', 'code-block'],

            [{ 'header': 1 }, { 'header': 2 }],               // custom button values
            [{ 'list': 'ordered' }, { 'list': 'bullet' }],
            [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript
            [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent
            [{ 'direction': 'rtl' }],                         // text direction

            [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
            ['link', 'image', 'video', 'formula'],          // add's image support
            [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
            [{ 'font': [] }],
            [{ 'align': [] }],

            ['clean']                                         // remove formatting button
        ];

        const quillEnunciadoEditor = new Quill('#enunciadoEditor', {
            theme: 'snow',
            modules: {
                toolbar: toolbarOptions,
                imageResize: {
                    displaySize: true // default false
                }
            },
        });

        quillAlternativa0Editor = new Quill('#alternativa0Editor', { theme: 'snow' });
        quillAlternativa1Editor = new Quill('#alternativa1Editor', { theme: 'snow' });
        quillAlternativa2Editor = new Quill('#alternativa2Editor', { theme: 'snow' });
        quillAlternativa3Editor = new Quill('#alternativa3Editor', { theme: 'snow' });
        //quillAlternativa4Editor = new Quill('#alternativa4Editor', { theme: 'snow' });

        bindDeltaToInput("#Enunciado", quillEnunciadoEditor);
        bindDeltaToInput("#Alternativas_0__Descricao", quillAlternativa0Editor);
        bindDeltaToInput("#Alternativas_1__Descricao", quillAlternativa1Editor);
        bindDeltaToInput("#Alternativas_2__Descricao", quillAlternativa2Editor);
        bindDeltaToInput("#Alternativas_3__Descricao", quillAlternativa3Editor);
        //bindDeltaToInput("#Alternativas_4__Descricao", quillAlternativa4Editor);

        function submitForm() {
            bindEnunciadoEditorToInput();

            bindAlternativaToInput('#Alternativas_0__Descricao', quillAlternativa0Editor);
            bindAlternativaToInput('#Alternativas_1__Descricao', quillAlternativa1Editor);
            bindAlternativaToInput('#Alternativas_2__Descricao', quillAlternativa2Editor);
            bindAlternativaToInput('#Alternativas_3__Descricao', quillAlternativa3Editor);
            //bindAlternativaToInput('#Alternativas_4__Descricao', quillAlternativa4Editor);

            document.querySelector('.form').submit();
        }

        function bindEnunciadoEditorToInput() {
            const inputField = document.querySelector("#Enunciado");
            inputField.value = JSON.stringify(quillEnunciadoEditor.getContents());
        }

        function bindAlternativaToInput(selector, quill) {
            const inputField = document.querySelector(selector);
            inputField.value = JSON.stringify(quill.getContents());
        }

        function bindDeltaToInput(selector, quill) {
            const deltaOps = document.querySelector(selector).value;
            quill.setContents(JSON.parse(deltaOps));
        }
    </script>
}
