@model QuestaoViewModel

@{
    ViewData["Title"] = "Adicionar Questão";
    var qtdAlternativas = 5;
}

@section Styles {
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">

    <style>
        #enunciadoEditor {
            height: 170px;
        }

        .alternativas .ql-container {
            height: 45px;
        }
    </style>
}

<main class="uk-card uk-card-default uk-card-body">
    <div class="uk-flex uk-flex-between uk-flex-bottom">
        <a class="uk-icon-button uk-button-default" asp-action="Index" uk-icon="arrow-left"></a>
        <div class="uk-flex uk-flex-middle">
            <span class="uk-card-title uk-text-uppercase uk-text-center">Adicionar Questão</span>
            <span class="uk-margin-small-left uk-margin-small-right">|</span>
            <span class="uk-text-center">
                <input class="uk-checkbox checkbox-habilitada" type="checkbox" asp-for="Habilitada" style="width: 22px; height: 22px;" onclick="changeQuestaoHabilitada()" />
                <label asp-for="Habilitada" class="uk-form-label"></label>
            </span>
        </div>
        <button class="uk-icon-button uk-button-primary" uk-icon="check" onclick="submitForm()"></button>
    </div>
    <hr class="uk-list-divider" />
    <form asp-action="Create" class="form">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <section class="uk-grid-row-small" uk-grid>
            <div class="uk-width-1-3@s">
                <label class="uk-form-label">Disciplina</label>
                <select id="Disciplinas" asp-items="ViewBag.DisciplinaId" class="uk-select @(ViewContext.ViewData.ModelState.ContainsKey("EtapaDisciplina") ? "uk-form-danger" : string.Empty)">
                    <option value="">---------</option>
                </select>
            </div>
            <div class="uk-width-1-3@s">
                <label class="uk-form-label">Tema</label>
                <select id="Temas" class="uk-select" disabled>
                    <option value="">---------</option>
                </select>
            </div>
            <div class="uk-width-1-3@s">
                <label class="uk-form-label">Descritores</label>
                <select asp-for="DescritorId" class="uk-select @(ViewContext.ViewData.ModelState.ContainsKey("DescritorId") ? "uk-form-danger" : string.Empty)" disabled>
                    <option value="">---------</option>
                </select>
                <span asp-validation-for="Descritor" class="uk-text-danger"></span>
            </div>
            <div class="uk-width-1-3@s">
                <label class="uk-form-label">Etapa</label>
                <select asp-for="EtapaId" asp-items="ViewBag.EtapaId" class="uk-select @(ViewContext.ViewData.ModelState.ContainsKey("EtapaDisciplina") ? "uk-form-danger" : string.Empty)"></select>
            </div>
            <div class="uk-width-1-3@s">
                <label asp-for="Item" class="uk-form-label"></label>
                <input asp-for="Item" class="uk-input" />
                <span asp-validation-for="Item" class="uk-text-danger"></span>
            </div>
            <div class="uk-width-1-3@s">
                <label asp-for="Descricao" class="uk-form-label">Descrição</label>
                <input asp-for="Descricao" class="uk-input" />
                <span asp-validation-for="Descricao" class="uk-text-danger"></span>
            </div>
            <div class="uk-width-1-1 uk-margin-top">
                <h2 class="uk-text-center">Enunciado</h2>
                <!-- Create the editor container -->
                <div id="enunciadoEditor"></div>
            </div>
            <input type="checkbox" asp-for="Habilitada" class="uk-hidden checkbox-habilitada-hidden" />
            <input type="hidden" asp-for="Enunciado" />
        </section>
        <section class="uk-margin-large-top uk-margin-bottom alternativas">
            <h3 class="uk-text-center">Alternativas</h3>
            <div class="uk-grid selectCheckboxAsRadio" uk-grid>
                @for (int i = 0; i < qtdAlternativas; i++)
                {
                    <div class="uk-width-1-2@s">
                        <div class="uk-flex uk-flex-between">
                            <p class="uk-text-center">@(i+1)º Alternativa</p>
                            <label>Correta <input class="uk-checkbox" type="checkbox" asp-for="Alternativas[i].Correta" onchange="selectCheckboxAsRadio(@i)"></label>
                        </div>
                        <div id="alternativa@(i)Editor"></div>
                        <input type="hidden" asp-for="Alternativas[i].Descricao" class="uk-input" />
                    </div>
                }
            </div>
        </section>
    </form>
</main>

@section Scripts {
    <script type="text/javascript" src="~/scripts/filterNestedFields.js"></script>
    <script type="text/javascript" src="~/scripts/selectCheckboxAsRadio.js"></script>
    <script type="text/javascript" src="~/scripts/quill.js"></script>

    <!-- Include the Quill library -->
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="~/libs/quill-image-resize/image-resize.min.js"></script>

    <script>
        const alternativas = [];

        document.addEventListener("DOMContentLoaded", () => {
            const disciplinaField = document.querySelector("#Disciplinas");
            const temaField = document.querySelector("#Temas");
            const descritorField = document.querySelector("#DescritorId");

            disciplinaField.addEventListener("change", () => {
                filterNestedFields(disciplinaField.value, "/api/v1/temasapi?id", "#Temas");
                temaField.selectedIndex = 0;
                temaField.disabled = true;
            });

            temaField.addEventListener("change", () => {
                filterNestedFields(temaField.value, "/api/v1/descritoresapi?id", "#DescritorId");
                descritorField.selectedIndex = 0;
                descritorField.disabled = true;
            });

        });

        const quillEnunciadoEditor = createExpandedQuill("#enunciadoEditor");
        bindDeltaToInput("#Enunciado", quillEnunciadoEditor);

        for (var i = 0; i < @qtdAlternativas; i++) {
            alternativas.push(createTinyQuill(`#alternativa${i}Editor`));
            bindDeltaToInput(`#Alternativas_${i}__Descricao`, alternativas[i]);
        }

        function changeQuestaoHabilitada() {
            const checkboxHabilitada = document.querySelector(".checkbox-habilitada");
            const checkboxHidden = document.querySelector(".checkbox-habilitada-hidden");

            checkboxHidden.checked = checkboxHabilitada.checked;
        }

        function submitForm() {
            bindEnunciadoEditorToInput();

            for (var i = 0; i < @qtdAlternativas; i++) {
                bindAlternativaToInput(`#Alternativas_${i}__Descricao`, alternativas[i]);
            }

            document.querySelector('.form').submit();
        }

        function bindEnunciadoEditorToInput() {
            const inputField = document.querySelector("#Enunciado");
            inputField.value = JSON.stringify(quillEnunciadoEditor.getContents());
        }

        function bindAlternativaToInput(selector, quill) {
            const inputField = document.querySelector(selector);
            inputField.value = JSON.stringify(quill.getContents());
        }

        function bindDeltaToInput(selector, quill) {
            let deltaOps = document.querySelector(selector).value;
            if (deltaOps === "") {
                deltaOps = "{}"
            }
            quill.setContents(JSON.parse(deltaOps));
        }
    </script>
}
