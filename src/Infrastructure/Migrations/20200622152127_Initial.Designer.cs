// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAED.Infrastructure.Data;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200622152127_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Alternativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Correta")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestaoId");

                    b.ToTable("Alternativa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Correta = true,
                            Descricao = "20",
                            QuestaoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Correta = false,
                            Descricao = "15",
                            QuestaoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Correta = false,
                            Descricao = "12",
                            QuestaoId = 1
                        },
                        new
                        {
                            Id = 4,
                            Correta = false,
                            Descricao = "17",
                            QuestaoId = 1
                        },
                        new
                        {
                            Id = 5,
                            Correta = false,
                            Descricao = "Pedro",
                            QuestaoId = 2
                        },
                        new
                        {
                            Id = 6,
                            Correta = true,
                            Descricao = "Carlos",
                            QuestaoId = 2
                        },
                        new
                        {
                            Id = 7,
                            Correta = false,
                            Descricao = "José",
                            QuestaoId = 2
                        },
                        new
                        {
                            Id = 8,
                            Correta = false,
                            Descricao = "Maria",
                            QuestaoId = 2
                        },
                        new
                        {
                            Id = 9,
                            Correta = false,
                            Descricao = "1,5",
                            QuestaoId = 3
                        },
                        new
                        {
                            Id = 10,
                            Correta = false,
                            Descricao = "2,9",
                            QuestaoId = 3
                        },
                        new
                        {
                            Id = 11,
                            Correta = true,
                            Descricao = "5,4",
                            QuestaoId = 3
                        },
                        new
                        {
                            Id = 12,
                            Correta = false,
                            Descricao = "4,2",
                            QuestaoId = 3
                        },
                        new
                        {
                            Id = 13,
                            Correta = false,
                            Descricao = "Ronaldo",
                            QuestaoId = 4
                        },
                        new
                        {
                            Id = 14,
                            Correta = false,
                            Descricao = "Adriana",
                            QuestaoId = 4
                        },
                        new
                        {
                            Id = 15,
                            Correta = false,
                            Descricao = "Marcelo",
                            QuestaoId = 4
                        },
                        new
                        {
                            Id = 16,
                            Correta = true,
                            Descricao = "Simone",
                            QuestaoId = 4
                        },
                        new
                        {
                            Id = 17,
                            Correta = false,
                            Descricao = "20",
                            QuestaoId = 5
                        },
                        new
                        {
                            Id = 18,
                            Correta = true,
                            Descricao = "10",
                            QuestaoId = 5
                        },
                        new
                        {
                            Id = 19,
                            Correta = false,
                            Descricao = "30",
                            QuestaoId = 5
                        },
                        new
                        {
                            Id = 20,
                            Correta = false,
                            Descricao = "40",
                            QuestaoId = 5
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Aluno");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nascimento = new DateTime(2002, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Maria Luz"
                        },
                        new
                        {
                            Id = 2,
                            Nascimento = new DateTime(1999, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "João carlos"
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Avaliacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = "2020",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Codigo = "2021",
                            Status = 0
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.AvaliacaoDisciplina", b =>
                {
                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.HasKey("DisciplinaId", "AvaliacaoId");

                    b.HasIndex("AvaliacaoId");

                    b.ToTable("AvaliacaoDisciplina");

                    b.HasData(
                        new
                        {
                            DisciplinaId = 1,
                            AvaliacaoId = 1
                        },
                        new
                        {
                            DisciplinaId = 2,
                            AvaliacaoId = 1
                        },
                        new
                        {
                            DisciplinaId = 3,
                            AvaliacaoId = 2
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.AvaliacaoDistrito", b =>
                {
                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("DistritoId")
                        .HasColumnType("int");

                    b.HasKey("AvaliacaoId", "DistritoId");

                    b.HasIndex("DistritoId");

                    b.ToTable("AvaliacaoDistrito");

                    b.HasData(
                        new
                        {
                            AvaliacaoId = 1,
                            DistritoId = 1
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("Curso");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Educação Infantil",
                            Sigla = "EI"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Ensino Fundamental",
                            Sigla = "EF"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Educação de Jovens e Adultos",
                            Sigla = "EJA"
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Descritor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("TemaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemaId");

                    b.ToTable("Descritor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Descritor 01 - Tema 1",
                            TemaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Descritor 02 - Tema 1",
                            TemaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Descritor 03 - Tema 1",
                            TemaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Descritor 04 - Tema 1",
                            TemaId = 1
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Descritor 05 - Tema 1",
                            TemaId = 1
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Descritor 01 - Tema 2",
                            TemaId = 2
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Descritor 02 - Tema 2",
                            TemaId = 2
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Descritor 03 - Tema 2",
                            TemaId = 2
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Descritor 04 - Tema 2",
                            TemaId = 2
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Descritor 05 - Tema 2",
                            TemaId = 2
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Descritor 01 - Tema 3",
                            TemaId = 3
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Descritor 02 - Tema 3",
                            TemaId = 3
                        },
                        new
                        {
                            Id = 13,
                            Nome = "Descritor 03 - Tema 3",
                            TemaId = 3
                        },
                        new
                        {
                            Id = 14,
                            Nome = "Descritor 04 - Tema 3",
                            TemaId = 3
                        },
                        new
                        {
                            Id = 15,
                            Nome = "Descritor 05 - Tema 3",
                            TemaId = 3
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("Disciplina");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Português",
                            Sigla = "Port"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Matemática",
                            Sigla = "Mat"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Ciências",
                            Sigla = "Cie"
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Distrito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Distancia")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.ToTable("Distrito");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Distancia = 0,
                            Nome = "Sede",
                            Zona = "Urbana"
                        },
                        new
                        {
                            Id = 2,
                            Distancia = 110,
                            Nome = "Abóbora",
                            Zona = "Rural"
                        },
                        new
                        {
                            Id = 3,
                            Distancia = 75,
                            Nome = "Itamotinga",
                            Zona = "Rural"
                        },
                        new
                        {
                            Id = 4,
                            Distancia = 50,
                            Nome = "Juremal",
                            Zona = "Rural"
                        },
                        new
                        {
                            Id = 5,
                            Distancia = 25,
                            Nome = "Carnaíba",
                            Zona = "Rural"
                        },
                        new
                        {
                            Id = 6,
                            Distancia = 40,
                            Nome = "Maniçoba",
                            Zona = "Rural"
                        },
                        new
                        {
                            Id = 7,
                            Distancia = 75,
                            Nome = "Pinhões",
                            Zona = "Rural"
                        },
                        new
                        {
                            Id = 8,
                            Distancia = 35,
                            Nome = "Junco",
                            Zona = "Rural"
                        },
                        new
                        {
                            Id = 9,
                            Distancia = 70,
                            Nome = "Massaroca",
                            Zona = "Rural"
                        },
                        new
                        {
                            Id = 10,
                            Distancia = 10,
                            Nome = "Mandacaru",
                            Zona = "Rural"
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<int>("DistritoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("Inep")
                        .HasColumnType("int");

                    b.Property<int?>("MatrizId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.HasKey("Id");

                    b.HasIndex("DistritoId");

                    b.HasIndex("MatrizId");

                    b.ToTable("Escola");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DistritoId = 4,
                            Email = "DOISDEJULHOJUAZEIRO@HOTMAIL.COM",
                            Inep = 29024935,
                            Nome = "02 DE JULHO",
                            Telefone = "74988440798"
                        },
                        new
                        {
                            Id = 2,
                            DistritoId = 4,
                            Email = "QUINZEDEJULHO2014@OUTLOOK.COM",
                            Inep = 29024994,
                            Nome = "15 DE JULHO",
                            Telefone = "7436113278"
                        },
                        new
                        {
                            Id = 3,
                            DistritoId = 4,
                            Email = "ESCOLA25.DEJULHO@OUTLOOK.COM",
                            Inep = 29026130,
                            Nome = "25 DE JULHO",
                            Telefone = "7488068024"
                        },
                        new
                        {
                            Id = 4,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026601,
                            Nome = "AMÉRICO TANURI - JUNCO",
                            Telefone = "7498811198"
                        },
                        new
                        {
                            Id = 5,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29026148,
                            Nome = "AMÉRICO TANURI - MANIÇOBA",
                            Telefone = "74988067161"
                        },
                        new
                        {
                            Id = 6,
                            DistritoId = 2,
                            Email = "EMMSBONFIM@HOTMAIL.COM",
                            Inep = 29025699,
                            Nome = "AMÉRICO TANURY - ABÓBORA",
                            Telefone = "7436179072"
                        },
                        new
                        {
                            Id = 7,
                            DistritoId = 1,
                            Email = "ANALIABARBOSA.EDU@GMAIL.COM",
                            Inep = 29341256,
                            Nome = "ANÁLIA BARBOSA DE SOUZA",
                            Telefone = "7491552384"
                        },
                        new
                        {
                            Id = 8,
                            DistritoId = 5,
                            Email = "VALDETEMSF@HOTMAIL.COM",
                            Inep = 29026482,
                            Nome = "ANTONIO FRANCISCO DE OLIVEIRA",
                            Telefone = "7488158634"
                        },
                        new
                        {
                            Id = 9,
                            DistritoId = 1,
                            Email = "CEAJC1@HOTMAIL.COM",
                            Inep = 29429536,
                            Nome = "ARGEMIRO JOSE DA CRUZ",
                            Telefone = "7436110018"
                        },
                        new
                        {
                            Id = 10,
                            DistritoId = 4,
                            Email = "ESCOLA_BOMJESUSBARAUNA@HOTMAIL.COM",
                            Inep = 29026156,
                            Nome = "BOM JESUS - BARAÚNA",
                            Telefone = "7436187055"
                        },
                        new
                        {
                            Id = 11,
                            DistritoId = 4,
                            Email = "BOMJESUS_NH01@HOTMAIL.COM",
                            Inep = 29025907,
                            Nome = "BOM JESUS - NH1",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 12,
                            DistritoId = 1,
                            Email = "MAZZARELLOROCHA@OUTLOOK.COM",
                            Inep = 29469120,
                            Nome = "C.R.A. PROFª MAZZARELLO CAVALCANTI REIS DA ROCHA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 13,
                            DistritoId = 1,
                            Email = "ESCOLACAICJUA@GMAIL.COM",
                            Inep = 29362415,
                            Nome = "CAIC - MISAEL AGUILAR",
                            Telefone = "7436118041"
                        },
                        new
                        {
                            Id = 14,
                            DistritoId = 1,
                            Email = "ESCOLA_CAXANGA@HOTMAIL.COM",
                            Inep = 29024650,
                            Nome = "CAXANGÁ",
                            Telefone = "7436122900"
                        },
                        new
                        {
                            Id = 15,
                            DistritoId = 4,
                            Email = "EMPMANDACARU@GMAIL.COM",
                            Inep = 29025346,
                            Nome = "CELSO CAVALCANTE DE CARVALHO",
                            Telefone = "7436177211"
                        },
                        new
                        {
                            Id = 16,
                            DistritoId = 1,
                            Email = "ESCOLACSU.JUA@GMAIL.COM",
                            Inep = 29024668,
                            Nome = "CENTRO SOCIAL URBANO - CSU",
                            Telefone = "7436112744"
                        },
                        new
                        {
                            Id = 17,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29025974,
                            Nome = "CORAÇÃO DE JESUS - JUREMA VERMELHA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 18,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29026164,
                            Nome = "CORAÇÃO DE JESUS - SERRA DA MADEIRA",
                            Telefone = "7496357165"
                        },
                        new
                        {
                            Id = 19,
                            DistritoId = 6,
                            Email = "ESCOLA_RAIMUNDOCUNHALEITE@HOTMAIL.COM",
                            Inep = 29026890,
                            Nome = "DEPUTADO RAIMUNDO DA CUNHA LEITE",
                            Telefone = "7436175001"
                        },
                        new
                        {
                            Id = 20,
                            DistritoId = 1,
                            Email = "ESCOLADJR@GMAIL.COM",
                            Inep = 29378893,
                            Nome = "DOM JOSÉ RODRIGUES",
                            Telefone = "7488110737"
                        },
                        new
                        {
                            Id = 21,
                            DistritoId = 4,
                            Email = "AMILTONGOMES2016@HOTMAIL.COM",
                            Inep = 29026024,
                            Nome = "DOUTOR EDSON RIBEIRO",
                            Telefone = "74988133633"
                        },
                        new
                        {
                            Id = 22,
                            DistritoId = 1,
                            Email = "ESCOLADRJOSEDEARAUJO@HOTMAIL.COM",
                            Inep = 29025478,
                            Nome = "DOUTOR JOSÉ DE ARAÚJO SOUZA",
                            Telefone = "7436130580"
                        },
                        new
                        {
                            Id = 23,
                            DistritoId = 6,
                            Email = "ESCOLADURVALBARBOSA@GMAL.COM",
                            Inep = 29026911,
                            Nome = "DURVAL BARBOSA DA CUNHA",
                            Telefone = "7436175004"
                        },
                        new
                        {
                            Id = 24,
                            DistritoId = 2,
                            Email = "EMMSBONFIM@HOTMAIL.COM",
                            Inep = 29025664,
                            Nome = "E.M.E.I. ABÓBORA",
                            Telefone = "7436179072"
                        },
                        new
                        {
                            Id = 25,
                            DistritoId = 1,
                            Email = "CLEIABARRETO02@OUTLOOK.COM",
                            Inep = 29461375,
                            Nome = "E.M.E.I. ADJALVA FERREIRA LIMA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 26,
                            DistritoId = 3,
                            Email = "",
                            Inep = 29025842,
                            Nome = "E.M.E.I. AMÉLIA BORGES",
                            Telefone = "7488223271"
                        },
                        new
                        {
                            Id = 27,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29402140,
                            Nome = "E.M.E.I. AMÉLIA DUARTE",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 28,
                            DistritoId = 1,
                            Email = "ROSANGELA.ALMEIDA@HOTMAIL.COM",
                            Inep = 29401220,
                            Nome = "E.M.E.I. ANA MARIA MORGADO CHAVES",
                            Telefone = "7436123354"
                        },
                        new
                        {
                            Id = 29,
                            DistritoId = 1,
                            Email = "CENTROANNAHILDA@GMAIL.COM",
                            Inep = 29402120,
                            Nome = "E.M.E.I. ANNA HILDA LEITE FARIAS",
                            Telefone = "7436124696"
                        },
                        new
                        {
                            Id = 30,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29461340,
                            Nome = "E.M.E.I. ANTÔNIO GUILHERMINO",
                            Telefone = "74988054502"
                        },
                        new
                        {
                            Id = 31,
                            DistritoId = 1,
                            Email = "EMAILPRIMAVEAARCENIOJOSE@GMAIL.COM",
                            Inep = 29429790,
                            Nome = "E.M.E.I. ARCENIO JOSÉ DA SILVA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 32,
                            DistritoId = 1,
                            Email = "JANE.SILVABARBOSA@HOTMAIL.COM",
                            Inep = 29464064,
                            Nome = "E.M.E.I. ARLINDA ALVES VARJÃO",
                            Telefone = "7488333869"
                        },
                        new
                        {
                            Id = 33,
                            DistritoId = 1,
                            Email = "EMEI.DIRETORIA@GMAIL.COM",
                            Inep = 29470820,
                            Nome = "E.M.E.I. BEATRIZ ANGÉLICA MOTA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 34,
                            DistritoId = 1,
                            Email = "SANTANABOL14@GMAIL.COM",
                            Inep = 29026423,
                            Nome = "E.M.E.I. BOLIVAR SANTANA",
                            Telefone = "7488054854"
                        },
                        new
                        {
                            Id = 35,
                            DistritoId = 4,
                            Email = "SUENI-SANTOS@YAHOO.COM.BR",
                            Inep = 29402170,
                            Nome = "E.M.E.I. BOM JESUS DOS NAVEGANTES",
                            Telefone = "7436173029"
                        },
                        new
                        {
                            Id = 36,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29932777,
                            Nome = "E.M.E.I. CAIC MISAEL AGUILAR",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 37,
                            DistritoId = 1,
                            Email = "JAMMYS.GUERRA@GMAIL.COM",
                            Inep = 29402190,
                            Nome = "E.M.E.I. DILMA CALMON DE OLIVEIRA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 38,
                            DistritoId = 1,
                            Email = "ROSALILAS_BISPO@HOTMAIL.COM",
                            Inep = 29461189,
                            Nome = "E.M.E.I. EDIVÂNIA SANTOS CARDOSO",
                            Telefone = "7488511345"
                        },
                        new
                        {
                            Id = 39,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29402100,
                            Nome = "E.M.E.I. GENTIL DAMÁSIO DO NASCIMENTO",
                            Telefone = "7436133763"
                        },
                        new
                        {
                            Id = 40,
                            DistritoId = 5,
                            Email = "SOLANGETIASOL@HOTMAIL.COM",
                            Inep = 29026628,
                            Nome = "E.M.E.I. HERBET MOUSE RODRIGUES",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 41,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29402210,
                            Nome = "E.M.E.I. JANDIRA BORGES",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 42,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29461367,
                            Nome = "E.M.E.I. LENI LOPES DE ARAÚJO SANTOS",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 43,
                            DistritoId = 1,
                            Email = "EMEILUANADASILVA@GMAIL.COM",
                            Inep = 29467152,
                            Nome = "E.M.E.I. LUANA DA SILVA NASCIMENTO",
                            Telefone = "74981300440"
                        },
                        new
                        {
                            Id = 44,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29461219,
                            Nome = "E.M.E.I. LUZINETE DE OLIVEIRA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 45,
                            DistritoId = 4,
                            Email = "VALDATDB12@GMAIL.COM",
                            Inep = 29461227,
                            Nome = "E.M.E.I. MANOEL ALVES DA MOTA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 46,
                            DistritoId = 7,
                            Email = "TULIOROZARORIZ@GMAIL.COM",
                            Inep = 29469635,
                            Nome = "E.M.E.I. MARIA FERREIRA DE SOUZA",
                            Telefone = "7436176145"
                        },
                        new
                        {
                            Id = 47,
                            DistritoId = 1,
                            Email = "EMEIMARIAHELENA@HOTMAIL.COM.BR",
                            Inep = 29461243,
                            Nome = "E.M.E.I. MARIA HELENA DA SILVA PEREIRA",
                            Telefone = "7488342914"
                        },
                        new
                        {
                            Id = 48,
                            DistritoId = 1,
                            Email = "CLAUDIANA.PROF@GMAIL.COM",
                            Inep = 29461235,
                            Nome = "E.M.E.I. MARIA HOZANA NUNES",
                            Telefone = "7436124696"
                        },
                        new
                        {
                            Id = 49,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29461170,
                            Nome = "E.M.E.I. MARIA JÚLIA RODRIGUES TANURI",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 50,
                            DistritoId = 1,
                            Email = "TRPAQUINO@HOTMAIL.COM",
                            Inep = 29025338,
                            Nome = "E.M.E.I. MARIA SUELY MEDRADO ARAÚJO",
                            Telefone = "7488419813"
                        },
                        new
                        {
                            Id = 51,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29402160,
                            Nome = "E.M.E.I. MARIÁ VIANA TANURI",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 52,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29461197,
                            Nome = "E.M.E.I. NÉLIA DE SOUZA COSTA",
                            Telefone = "7436123354"
                        },
                        new
                        {
                            Id = 53,
                            DistritoId = 1,
                            Email = "EMEINAILDE@HOTMAIL.COM",
                            Inep = 29402150,
                            Nome = "E.M.E.I. NAILDE DE SOUZA COSTA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 54,
                            DistritoId = 3,
                            Email = "ESCOLA_NSGROTAS@HOTMAIL.COM",
                            Inep = 29025788,
                            Nome = "E.M.E.I. NOSSA SENHORA DAS GROTAS - CARNAÍBA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 55,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29445256,
                            Nome = "E.M.E.I. NOSSO SENHOR DOS AFLITOS",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 56,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026792,
                            Nome = "E.M.E.I. PASSAGEM DO SARGENTO",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 57,
                            DistritoId = 1,
                            Email = "JOSEFACRISTINAT@GMAIL.COM",
                            Inep = 29469252,
                            Nome = "E.M.E.I. PASTOR MANOEL MARQUES DE SOUZA",
                            Telefone = "74988136212"
                        },
                        new
                        {
                            Id = 58,
                            DistritoId = 1,
                            Email = "MARI_LUCA@MSN.COM",
                            Inep = 29470811,
                            Nome = "E.M.E.I. PREFEITO APRÍGIO DUARTE",
                            Telefone = "74988320498"
                        },
                        new
                        {
                            Id = 59,
                            DistritoId = 1,
                            Email = "EMAILPRIMAVERAARCENIOJOSE@GMAIL.COM",
                            Inep = 29461251,
                            Nome = "E.M.E.I. PRIMAVERA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 60,
                            DistritoId = 1,
                            Email = "EMEIHELOISAHELENA@HOTMAIL.COM",
                            Inep = 29402110,
                            Nome = "E.M.E.I. PROFª HELOISA HELENA BENEVIDES FARIAS",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 61,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29026261,
                            Nome = "E.M.E.I. PROFª JOANA RAMOS NETA",
                            Telefone = "7499346352"
                        },
                        new
                        {
                            Id = 62,
                            DistritoId = 8,
                            Email = "ALINEDEFATIMA92@GMAIL.COM",
                            Inep = 29027098,
                            Nome = "E.M.E.I. SÃO FRANCISCO DE ASSIS",
                            Telefone = "74999563806"
                        },
                        new
                        {
                            Id = 63,
                            DistritoId = 4,
                            Email = "ANACCN2007@YAHOO.COM.BR",
                            Inep = 29469112,
                            Nome = "E.M.R.T.I. SÃO JOSÉ",
                            Telefone = "74999522470"
                        },
                        new
                        {
                            Id = 64,
                            DistritoId = 1,
                            Email = "LINDY_CPC@HOTMAIL.COM",
                            Inep = 29450004,
                            Nome = "E.M.T.I. PROFª IRACEMA PEREIRA DA PAIXÃO",
                            Telefone = "74988090992"
                        },
                        new
                        {
                            Id = 65,
                            DistritoId = 1,
                            Email = "EDUCANDARIOJOAO23@HOTMAIL.COM",
                            Inep = 29401610,
                            Nome = "EDUCANDÁRIO JOÃO XXIII",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 66,
                            DistritoId = 8,
                            Email = "ALINEDEFATIMA92@GMAIL.COM",
                            Inep = 29341744,
                            Nome = "ELEOTÉRIO SOARES FONSÊCA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 67,
                            DistritoId = 4,
                            Email = "ESCOLAMUNICIPALELISEUSANTOS@HOTMAIL.COM",
                            Inep = 29026113,
                            Nome = "ELISEU SANTOS",
                            Telefone = "7488078555"
                        },
                        new
                        {
                            Id = 68,
                            DistritoId = 4,
                            Email = "EURIDICERIBEIROVIANA.QUIPA@HOTMAIL.COM",
                            Inep = 29026199,
                            Nome = "EURÍDICE RIBEIRO VIANA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 69,
                            DistritoId = 4,
                            Email = "KLERISSON@YAHOO.COM.BR",
                            Inep = 29026202,
                            Nome = "FAMÍLIA UNIDA",
                            Telefone = "7488367939"
                        },
                        new
                        {
                            Id = 70,
                            DistritoId = 1,
                            Email = "ESCOLAPROMENOR@HOTMAIL.COM",
                            Inep = 29025524,
                            Nome = "FUNDAÇÃO JUAZEIRENSE PROMENOR",
                            Telefone = "7436113992"
                        },
                        new
                        {
                            Id = 71,
                            DistritoId = 3,
                            Email = "ESCOLAGRACIOSAXAVIER@GMAIL.COM",
                            Inep = 29025753,
                            Nome = "GRACIOSA XAVIER RAMOS GOMES",
                            Telefone = "7436181029"
                        },
                        new
                        {
                            Id = 72,
                            DistritoId = 1,
                            Email = "PATRICIACARLA01@HOTMAIL.COM",
                            Inep = 29025575,
                            Nome = "HELENA ARAÚJO PINHEIRO",
                            Telefone = "7436111626"
                        },
                        new
                        {
                            Id = 73,
                            DistritoId = 4,
                            Email = "AMILTONGOMES2016@HOTMAIL.COM",
                            Inep = 29025583,
                            Nome = "JATOBÁ",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 74,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026741,
                            Nome = "JOÃO DIAS FERREIRA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 75,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29025222,
                            Nome = "JOÃO NEVES DE ALMEIDA",
                            Telefone = "74988111398"
                        },
                        new
                        {
                            Id = 76,
                            DistritoId = 1,
                            Email = "JOCA.DIRETORIA@GMAIL.COM",
                            Inep = 29025168,
                            Nome = "JOCA DE SOUZA OLIVEIRA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 77,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026636,
                            Nome = "JOSÉ DE AMORIM",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 78,
                            DistritoId = 1,
                            Email = "ESCOLAJOSEPADILHA@HOTMAIL.COM",
                            Inep = 29025370,
                            Nome = "JOSÉ PADILHA DE SOUZA",
                            Telefone = "7436120372"
                        },
                        new
                        {
                            Id = 79,
                            DistritoId = 1,
                            Email = "ESCOLAJUDITELCOSTA@HOTMAIL.COM",
                            Inep = 29025176,
                            Nome = "JUDITE LEAL COSTA",
                            Telefone = "7436114939"
                        },
                        new
                        {
                            Id = 80,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026644,
                            Nome = "LÚCIA CARMEM SOBREIRA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 81,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29025923,
                            Nome = "LINDAURA MARIA DE JESUS",
                            Telefone = "7436172000"
                        },
                        new
                        {
                            Id = 82,
                            DistritoId = 1,
                            Email = "ESCOLALUDGERO@GMAIL.COM",
                            Inep = 29025184,
                            Nome = "LUDGERO DE SOUZA COSTA",
                            Telefone = "7436121731"
                        },
                        new
                        {
                            Id = 83,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29025206,
                            Nome = "MANDACARU",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 84,
                            DistritoId = 2,
                            Email = "EMMSBONFIM@HOTMAIL.COM",
                            Inep = 29025672,
                            Nome = "MANOEL DE SOUZA BONFIM",
                            Telefone = "7436179072"
                        },
                        new
                        {
                            Id = 85,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29026440,
                            Nome = "MANOEL GOMES MARTINS",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 86,
                            DistritoId = 4,
                            Email = "JAQUELLINEASSESSORIA27@GMAIL.COM",
                            Inep = 29026296,
                            Nome = "MANOEL LUIZ DA SILVA",
                            Telefone = "7436139057"
                        },
                        new
                        {
                            Id = 87,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29341710,
                            Nome = "MANOEL NUNES AMORIM",
                            Telefone = "7436115110"
                        },
                        new
                        {
                            Id = 88,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026776,
                            Nome = "MARIA AMÉLIA DE SOUZA OLIVEIRA",
                            Telefone = "7491044270"
                        },
                        new
                        {
                            Id = 89,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026652,
                            Nome = "MARIA DO CARMO SÁ NOGUEIRA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 90,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026660,
                            Nome = "MARIA MONTEIRO BACELAR",
                            Telefone = "7436184001"
                        },
                        new
                        {
                            Id = 91,
                            DistritoId = 4,
                            Email = "ESCOLAMARIANORODRIGUES@YAHOO.COM.BR",
                            Inep = 29025230,
                            Nome = "MARIANO RODRIGUES DE SOUZA",
                            Telefone = "7436183004"
                        },
                        new
                        {
                            Id = 92,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026679,
                            Nome = "MIGUEL ÂNGELO DE SOUZA",
                            Telefone = "7499867445"
                        },
                        new
                        {
                            Id = 93,
                            DistritoId = 4,
                            Email = "NOSSASENHORASAOFRANCISCO@GMAIL.COM",
                            Inep = 29026105,
                            Nome = "NOSSA SENHORA DAS GROTAS - BOQUEIRÃO",
                            Telefone = "7436178287"
                        },
                        new
                        {
                            Id = 94,
                            DistritoId = 1,
                            Email = "ENSGSEDUC@GMAIL.COM",
                            Inep = 29025311,
                            Nome = "NOSSA SENHORA DAS GROTAS-SEDE",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 95,
                            DistritoId = 4,
                            Email = "ESCOLARAINHA@GMAIL.COM",
                            Inep = 29025958,
                            Nome = "NOSSA SENHORA RAINHA DOS ANJOS",
                            Telefone = "7491957370"
                        },
                        new
                        {
                            Id = 96,
                            DistritoId = 3,
                            Email = "ESCOLA_OSORIOTELES@HOTMAIL.COM",
                            Inep = 29025869,
                            Nome = "OSORIO TELES DE MENEZES",
                            Telefone = "7436181270"
                        },
                        new
                        {
                            Id = 97,
                            DistritoId = 5,
                            Email = "JAELTON.OLIVEIRA@HOTMAIL.COM",
                            Inep = 29461359,
                            Nome = "PAULO FREIRE",
                            Telefone = "7499077828"
                        },
                        new
                        {
                            Id = 98,
                            DistritoId = 1,
                            Email = "PAULOVI_2511@HOTMAIL.COM",
                            Inep = 29024587,
                            Nome = "PAULO VI",
                            Telefone = "7436115675"
                        },
                        new
                        {
                            Id = 99,
                            DistritoId = 3,
                            Email = "ESCOLAGRACIOSAXAVIER@GMAIL.COM",
                            Inep = 29025834,
                            Nome = "PEDRO DIAS",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 100,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29026431,
                            Nome = "PONTAL",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 101,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29025362,
                            Nome = "PREFEITO APRÍGIO DUARTE",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 102,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29401600,
                            Nome = "PRESIDENTE TANCREDO NEVES",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 103,
                            DistritoId = 6,
                            Email = "ESCOLAAFC@GMAIL.COM",
                            Inep = 29026873,
                            Nome = "PROFª ANTONILA DA FRANÇA CARDOSO",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 104,
                            DistritoId = 7,
                            Email = "",
                            Inep = 29026989,
                            Nome = "PROFª ATANILHA LUZ ARAÚJO",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 105,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026695,
                            Nome = "PROFª BERNADETE BRAGA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 106,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29024692,
                            Nome = "PROFª CARMEM COSTA SANTOS",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 107,
                            DistritoId = 1,
                            Email = "E.CRENILDESBRANDAO@GMAIL.COM",
                            Inep = 29024900,
                            Nome = "PROFª CRENILDES LUIS BRANDÃO",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 108,
                            DistritoId = 1,
                            Email = "ESCOLADINORAH@MSN.COM",
                            Inep = 29025036,
                            Nome = "PROFª DINORAH ALBERNAZ MELO DA SILVA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 109,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026709,
                            Nome = "PROFª EDUALDINA DAMÁSIO",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 110,
                            DistritoId = 1,
                            Email = "ESCOLAGUIOMARLUSTOSA@HOTMAIL.COM",
                            Inep = 29024838,
                            Nome = "PROFª GUIOMAR LUSTOSA RODRIGUES",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 111,
                            DistritoId = 1,
                            Email = "ESCOLAHAYDEE@GMAIL.COM",
                            Inep = 29024960,
                            Nome = "PROFª HAYDÉE FONSECA FALCÃO",
                            Telefone = "74999858835"
                        },
                        new
                        {
                            Id = 112,
                            DistritoId = 4,
                            Email = "COLEGIOIRACYNUNES@GMAIL.COM",
                            Inep = 29341809,
                            Nome = "PROFª IRACY NUNES DA SILVA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 113,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29024978,
                            Nome = "PROFª LEOPOLDINA LEAL",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 114,
                            DistritoId = 1,
                            Email = "ESCOLAMARIALOURDESDUARTE@HOTMAIL.COM",
                            Inep = 29024943,
                            Nome = "PROFª MARIA DE LOURDES DUARTE",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 115,
                            DistritoId = 1,
                            Email = "",
                            Inep = 29024986,
                            Nome = "PROFª MARIA FRANCA PIRES",
                            Telefone = "7436137115"
                        },
                        new
                        {
                            Id = 116,
                            DistritoId = 1,
                            Email = "WILZAMIRANDA@HOTMAIL.COM",
                            Inep = 29362504,
                            Nome = "PROFª MARIA JOSÉ LIMA DA ROCHA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 117,
                            DistritoId = 3,
                            Email = "ESCOLA_MATILDECOSTA@HOTMAIL.COM",
                            Inep = 29025770,
                            Nome = "PROFª MATILDE COSTA MEDRADO",
                            Telefone = "74988526535"
                        },
                        new
                        {
                            Id = 118,
                            DistritoId = 5,
                            Email = "",
                            Inep = 29026725,
                            Nome = "PROFª OSCARLINA TANURI",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 119,
                            DistritoId = 1,
                            Email = "ESCOLATEREZINHA.ETFO@HOTMAIL.COM",
                            Inep = 29025397,
                            Nome = "PROFª TEREZINHA FERREIRA DE OLIVEIRA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 120,
                            DistritoId = 1,
                            Email = "ESCOLACARLOSCOSTA_2012@HOTMAIL.COM",
                            Inep = 29415160,
                            Nome = "PROFº CARLOS DA COSTA SILVA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 121,
                            DistritoId = 1,
                            Email = "MUNICIPALJOSEPEREIRA@BOL.COM.BR",
                            Inep = 29405106,
                            Nome = "PROFº JOSÉ PEREIRA DA SILVA",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 122,
                            DistritoId = 1,
                            Email = "LUCYSOARES1@HOTMAIL.COM",
                            Inep = 29024714,
                            Nome = "PROFº LUIS CURSINO DA FRANÇA CARDOSO",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 123,
                            DistritoId = 8,
                            Email = "ALINEDEFATIMA92@GMAIL.COM",
                            Inep = 29027055,
                            Nome = "RAIMUNDO CLEMENTINO DE SOUZA",
                            Telefone = "74999759179"
                        },
                        new
                        {
                            Id = 124,
                            DistritoId = 1,
                            Email = "RAIMUNDOMEDRADOPRIMO@HOTMAIL.COM",
                            Inep = 29424445,
                            Nome = "RAIMUNDO MEDRADO PRIMO",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 125,
                            DistritoId = 7,
                            Email = "RURALMASSAROCA@HOTMAIL.COM",
                            Inep = 29341779,
                            Nome = "RURAL DE MASSAROCA - ERUM",
                            Telefone = "74994436003"
                        },
                        new
                        {
                            Id = 126,
                            DistritoId = 4,
                            Email = "NOSSASENHORASAOFRANCISCO@GMAIL.COM",
                            Inep = 29026350,
                            Nome = "SÃO FRANCISCO DE ASSIS - MULUNGÚ",
                            Telefone = "7436178287"
                        },
                        new
                        {
                            Id = 127,
                            DistritoId = 4,
                            Email = "NH2SAOFRANCISCO@GMAIL.COM",
                            Inep = 29025982,
                            Nome = "SÃO FRANCISCO DE ASSIS - NH2",
                            Telefone = "7436189018"
                        },
                        new
                        {
                            Id = 128,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29026377,
                            Nome = "SÃO JOSÉ",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 129,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29025931,
                            Nome = "SÃO SEBASTIÃO",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 130,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29026288,
                            Nome = "SANTA INÊS",
                            Telefone = ""
                        },
                        new
                        {
                            Id = 131,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29026300,
                            Nome = "SANTA TEREZINHA",
                            Telefone = "7488110653"
                        },
                        new
                        {
                            Id = 132,
                            DistritoId = 4,
                            Email = "",
                            Inep = 29025010,
                            Nome = "SANTO ANTÔNIO",
                            Telefone = "7436187055"
                        },
                        new
                        {
                            Id = 133,
                            DistritoId = 5,
                            Email = "ESCOLAAMADEUSDAMASIO@GMAIL.COM",
                            Inep = 29026520,
                            Nome = "VEREADOR AMADEUS DAMÁSIO",
                            Telefone = "7435381883"
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Etapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("Normativa")
                        .HasColumnType("int");

                    b.Property<int>("SegmentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SegmentoId");

                    b.ToTable("Etapa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Berçário",
                            Normativa = 1,
                            SegmentoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Infantil I",
                            Normativa = 1,
                            SegmentoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Infantil II",
                            Normativa = 1,
                            SegmentoId = 1
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Infantil III",
                            Normativa = 1,
                            SegmentoId = 1
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Infantil IV",
                            Normativa = 1,
                            SegmentoId = 2
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Infantil V",
                            Normativa = 1,
                            SegmentoId = 2
                        },
                        new
                        {
                            Id = 7,
                            Nome = "1º Ano",
                            Normativa = 1,
                            SegmentoId = 3
                        },
                        new
                        {
                            Id = 8,
                            Nome = "2º Ano",
                            Normativa = 1,
                            SegmentoId = 3
                        },
                        new
                        {
                            Id = 9,
                            Nome = "3º Ano",
                            Normativa = 1,
                            SegmentoId = 3
                        },
                        new
                        {
                            Id = 10,
                            Nome = "4º Ano",
                            Normativa = 1,
                            SegmentoId = 3
                        },
                        new
                        {
                            Id = 11,
                            Nome = "5º Ano",
                            Normativa = 1,
                            SegmentoId = 3
                        },
                        new
                        {
                            Id = 12,
                            Nome = "6º Ano",
                            Normativa = 1,
                            SegmentoId = 4
                        },
                        new
                        {
                            Id = 13,
                            Nome = "7º Ano",
                            Normativa = 1,
                            SegmentoId = 4
                        },
                        new
                        {
                            Id = 14,
                            Nome = "8º Ano",
                            Normativa = 1,
                            SegmentoId = 4
                        },
                        new
                        {
                            Id = 15,
                            Nome = "9º Ano",
                            Normativa = 1,
                            SegmentoId = 4
                        },
                        new
                        {
                            Id = 16,
                            Nome = "Etapa I",
                            Normativa = 1,
                            SegmentoId = 5
                        },
                        new
                        {
                            Id = 17,
                            Nome = "Etapa II",
                            Normativa = 1,
                            SegmentoId = 5
                        },
                        new
                        {
                            Id = 18,
                            Nome = "Etapa III",
                            Normativa = 1,
                            SegmentoId = 5
                        },
                        new
                        {
                            Id = 19,
                            Nome = "Etapa IV",
                            Normativa = 1,
                            SegmentoId = 6
                        },
                        new
                        {
                            Id = 20,
                            Nome = "Etapa V",
                            Normativa = 1,
                            SegmentoId = 6
                        },
                        new
                        {
                            Id = 21,
                            Nome = "Se Liga",
                            Normativa = 1,
                            SegmentoId = 7
                        },
                        new
                        {
                            Id = 22,
                            Nome = "Acelera",
                            Normativa = 1,
                            SegmentoId = 7
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.EtapaDescritor", b =>
                {
                    b.Property<int>("EtapaId")
                        .HasColumnType("int");

                    b.Property<int>("DescritorId")
                        .HasColumnType("int");

                    b.HasKey("EtapaId", "DescritorId");

                    b.HasIndex("DescritorId");

                    b.ToTable("EtapaDescritor");

                    b.HasData(
                        new
                        {
                            EtapaId = 11,
                            DescritorId = 1
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Forma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("Forma");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Seriada"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Multi"
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Questao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DescritorId")
                        .HasColumnType("int");

                    b.Property<bool>("Habilitada")
                        .HasColumnType("bit");

                    b.Property<string>("Html")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.HasIndex("DescritorId");

                    b.ToTable("Questao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Questao 01 - Descritor 1",
                            DescritorId = 1,
                            Habilitada = false,
                            Item = "P01"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Questao 02 - Descritor 1",
                            DescritorId = 1,
                            Habilitada = false,
                            Item = "P02"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Questao 03 - Descritor 1",
                            DescritorId = 1,
                            Habilitada = false,
                            Item = "P03"
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Questao 04 - Descritor 1",
                            DescritorId = 1,
                            Habilitada = false,
                            Item = "P04"
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Questao 01 - Descritor 2",
                            DescritorId = 2,
                            Habilitada = false,
                            Item = "P01"
                        },
                        new
                        {
                            Id = 6,
                            Descricao = "Questao 02 - Descritor 2",
                            DescritorId = 2,
                            Habilitada = false,
                            Item = "P02"
                        },
                        new
                        {
                            Id = 7,
                            Descricao = "Questao 01 - Descritor 3",
                            DescritorId = 3,
                            Habilitada = false,
                            Item = "P01"
                        },
                        new
                        {
                            Id = 8,
                            Descricao = "Questao 01 - Descritor 4",
                            DescritorId = 4,
                            Habilitada = false,
                            Item = "P01"
                        },
                        new
                        {
                            Id = 9,
                            Descricao = "Questao 02 - Descritor 4",
                            DescritorId = 4,
                            Habilitada = false,
                            Item = "P02"
                        },
                        new
                        {
                            Id = 10,
                            Descricao = "Teste",
                            DescritorId = 2,
                            Habilitada = false,
                            Item = "P01"
                        },
                        new
                        {
                            Id = 11,
                            Descricao = "Teste2",
                            DescritorId = 3,
                            Habilitada = false,
                            Item = "P02"
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.QuestaoAvaliacao", b =>
                {
                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("QuestaoId")
                        .HasColumnType("int");

                    b.HasKey("AvaliacaoId", "QuestaoId");

                    b.HasIndex("QuestaoId");

                    b.ToTable("QuestaoAvaliacao");

                    b.HasData(
                        new
                        {
                            AvaliacaoId = 1,
                            QuestaoId = 1
                        },
                        new
                        {
                            AvaliacaoId = 1,
                            QuestaoId = 2
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.RespostaAluno", b =>
                {
                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("AlternativaId")
                        .HasColumnType("int");

                    b.HasKey("AvaliacaoId", "AlunoId", "AlternativaId");

                    b.HasIndex("AlternativaId")
                        .IsUnique();

                    b.HasIndex("AlunoId");

                    b.ToTable("RespostaAluno");

                    b.HasData(
                        new
                        {
                            AvaliacaoId = 1,
                            AlunoId = 1,
                            AlternativaId = 5
                        },
                        new
                        {
                            AvaliacaoId = 1,
                            AlunoId = 1,
                            AlternativaId = 11
                        },
                        new
                        {
                            AvaliacaoId = 1,
                            AlunoId = 2,
                            AlternativaId = 7
                        },
                        new
                        {
                            AvaliacaoId = 1,
                            AlunoId = 2,
                            AlternativaId = 10
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EscolaId")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.ToTable("Sala");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EscolaId = 1,
                            Numero = 1
                        },
                        new
                        {
                            Id = 2,
                            EscolaId = 1,
                            Numero = 2
                        },
                        new
                        {
                            Id = 3,
                            EscolaId = 1,
                            Numero = 1
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Segmento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Segmento");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CursoId = 1,
                            Nome = "Creche",
                            Sigla = "CR"
                        },
                        new
                        {
                            Id = 2,
                            CursoId = 1,
                            Nome = "Pré-Escola",
                            Sigla = "PE"
                        },
                        new
                        {
                            Id = 3,
                            CursoId = 2,
                            Nome = "Ensino Fundamental I",
                            Sigla = "EF I"
                        },
                        new
                        {
                            Id = 4,
                            CursoId = 2,
                            Nome = "Ensino Fundamental II",
                            Sigla = "EF II"
                        },
                        new
                        {
                            Id = 5,
                            CursoId = 3,
                            Nome = "Educação de Jovens e Adultos I",
                            Sigla = "EJA I"
                        },
                        new
                        {
                            Id = 6,
                            CursoId = 3,
                            Nome = "Educação de Jovens e Adultos II",
                            Sigla = "EJA II"
                        },
                        new
                        {
                            Id = 7,
                            CursoId = 2,
                            Nome = "Correção de Fluxo",
                            Sigla = "CF"
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("Tema");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisciplinaId = 1,
                            Nome = "Tema 01 - Disciplina Port"
                        },
                        new
                        {
                            Id = 2,
                            DisciplinaId = 1,
                            Nome = "Tema 02 - Disciplina Port"
                        },
                        new
                        {
                            Id = 3,
                            DisciplinaId = 1,
                            Nome = "Tema 03 - Disciplina Port"
                        },
                        new
                        {
                            Id = 4,
                            DisciplinaId = 1,
                            Nome = "Tema 04 - Disciplina Port"
                        },
                        new
                        {
                            Id = 5,
                            DisciplinaId = 1,
                            Nome = "Tema 05 - Disciplina Port"
                        },
                        new
                        {
                            Id = 6,
                            DisciplinaId = 2,
                            Nome = "Tema 01 - Disciplina Mat"
                        },
                        new
                        {
                            Id = 7,
                            DisciplinaId = 2,
                            Nome = "Tema 02 - Disciplina Mat"
                        },
                        new
                        {
                            Id = 8,
                            DisciplinaId = 2,
                            Nome = "Tema 03 - Disciplina Mat"
                        },
                        new
                        {
                            Id = 9,
                            DisciplinaId = 2,
                            Nome = "Tema 04 - Disciplina Mat"
                        },
                        new
                        {
                            Id = 10,
                            DisciplinaId = 2,
                            Nome = "Tema 05 - Disciplina Mat"
                        },
                        new
                        {
                            Id = 11,
                            DisciplinaId = 3,
                            Nome = "Tema 01 - Disciplina Cie"
                        },
                        new
                        {
                            Id = 12,
                            DisciplinaId = 3,
                            Nome = "Tema 02 - Disciplina Cie"
                        },
                        new
                        {
                            Id = 13,
                            DisciplinaId = 3,
                            Nome = "Tema 03 - Disciplina Cie"
                        },
                        new
                        {
                            Id = 14,
                            DisciplinaId = 3,
                            Nome = "Tema 04 - Disciplina Cie"
                        },
                        new
                        {
                            Id = 15,
                            DisciplinaId = 3,
                            Nome = "Tema 05 - Disciplina Cie"
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EtapaId")
                        .HasColumnType("int");

                    b.Property<bool>("Extinta")
                        .HasColumnType("bit");

                    b.Property<int>("FormaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("QtdAlunos")
                        .HasColumnType("int");

                    b.Property<int>("SalaId")
                        .HasColumnType("int");

                    b.Property<int>("TurnoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EtapaId");

                    b.HasIndex("FormaId");

                    b.HasIndex("SalaId");

                    b.HasIndex("TurnoId");

                    b.ToTable("Turma");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EtapaId = 11,
                            Extinta = false,
                            FormaId = 1,
                            Nome = "A",
                            QtdAlunos = 15,
                            SalaId = 1,
                            TurnoId = 1
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.TurmaAluno", b =>
                {
                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.HasKey("TurmaId", "AlunoId");

                    b.HasIndex("AlunoId");

                    b.ToTable("TurmaAluno");

                    b.HasData(
                        new
                        {
                            TurmaId = 1,
                            AlunoId = 1
                        },
                        new
                        {
                            TurmaId = 1,
                            AlunoId = 2
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Turno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Turno");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Manhã"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Tarde"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Noite"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Integral"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Não Informado"
                        });
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.UsuarioTurmaAvaliacao", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.Property<int>("AvaliacaoId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationUserId", "TurmaId", "AvaliacaoId");

                    b.HasIndex("AvaliacaoId");

                    b.HasIndex("TurmaId");

                    b.ToTable("UsuarioTurmaAvaliacao");
                });

            modelBuilder.Entity("SAED.Infrastructure.Identity.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("SAED.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("SAED.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("SAED.Infrastructure.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Alternativa", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Questao", "Questao")
                        .WithMany("Alternativas")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.AvaliacaoDisciplina", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Avaliacao", "Avaliacao")
                        .WithMany("AvaliacaoDisciplinas")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Disciplina", "Disciplina")
                        .WithMany("AvaliacaoDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.AvaliacaoDistrito", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Avaliacao", "Avaliacao")
                        .WithMany("AvaliacaoDistritos")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Distrito", "Distrito")
                        .WithMany("AvaliacaoDistritos")
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Descritor", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Tema", "Tema")
                        .WithMany("Descritores")
                        .HasForeignKey("TemaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Escola", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Distrito", "Distrito")
                        .WithMany("Escolas")
                        .HasForeignKey("DistritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Escola", "Matriz")
                        .WithMany()
                        .HasForeignKey("MatrizId");
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Etapa", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Segmento", "Segmento")
                        .WithMany("Etapas")
                        .HasForeignKey("SegmentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.EtapaDescritor", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Descritor", "Descritor")
                        .WithMany("EtapaDescritores")
                        .HasForeignKey("DescritorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Etapa", "Etapa")
                        .WithMany("EtapaDescritores")
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Questao", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Descritor", "Descritor")
                        .WithMany("Questoes")
                        .HasForeignKey("DescritorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.QuestaoAvaliacao", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Avaliacao", "Avaliacao")
                        .WithMany("QuestaoAvaliacoes")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Questao", "Questao")
                        .WithMany("QuestaoAvaliacoes")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.RespostaAluno", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Alternativa", "Alternativa")
                        .WithOne("RespostaAluno")
                        .HasForeignKey("SAED.ApplicationCore.Entities.RespostaAluno", "AlternativaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Aluno", "Aluno")
                        .WithMany("RespostaAlunos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Avaliacao", "Avaliacao")
                        .WithMany("RespostaAlunos")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Sala", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Escola", "Escola")
                        .WithMany("Salas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Segmento", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Curso", "Curso")
                        .WithMany("Segmentos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Tema", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Disciplina", "Disciplina")
                        .WithMany("Temas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.Turma", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Etapa", "Etapa")
                        .WithMany("Turmas")
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Forma", "Forma")
                        .WithMany("Turmas")
                        .HasForeignKey("FormaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Sala", "Sala")
                        .WithMany("Turmas")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Turno", "Turno")
                        .WithMany("Turmas")
                        .HasForeignKey("TurnoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.TurmaAluno", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Aluno", "Aluno")
                        .WithMany("TurmaAlunos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Turma", "Turma")
                        .WithMany("TurmaAlunos")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SAED.ApplicationCore.Entities.UsuarioTurmaAvaliacao", b =>
                {
                    b.HasOne("SAED.ApplicationCore.Entities.Avaliacao", "Avaliacao")
                        .WithMany("UsuarioTurmaAvaliacao")
                        .HasForeignKey("AvaliacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAED.ApplicationCore.Entities.Turma", "Turma")
                        .WithMany("UsuarioTurmaAvaliacao")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
