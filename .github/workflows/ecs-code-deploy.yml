name: Amazon ECS - Code Deploy

on: 
  workflow_dispatch:

#   workflow_run:
#     workflows: 
#       - docker
#     branches: 
#       - main
#     types:
#       - completed

#   push:
#     branches: 
#       - main

#   pull_request:
#     branches: 
#       - main

jobs:
  docker:
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}

    environment:
      name: Development

    env:
      DOCKERHUB_USER_IMAGE_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGE_WITH_TAG }}
      GITHUB_USER_IMAGE_TAG: ${{ github.repository_owner }}/${{ secrets.DOCKERHUB_IMAGE_WITH_TAG }}

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:src"
          push: true
          tags: ${{ env.GITHUB_USER_IMAGE_TAG }}

  DeployDev:
    needs: [docker]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    environment:
      name: Development
      url: 'https://saed.t4zo.com/health'

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16-node16
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment \
            --application-name saed \
            --deployment-group-name saed-dev \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --file-exists-behavior=OVERWRITE \
            --auto-rollback-configuration enabled=true,events=DEPLOYMENT_FAILURE
