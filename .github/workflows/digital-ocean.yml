name: SAED Deployment on Droplet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Restore SAED.Web
        run: dotnet restore ./src/SAED.Web/SAED.Web.csproj

      - name: Build SAED.Web
        run: dotnet build --configuration Release --no-restore ./src/SAED.Web/SAED.Web.csproj

      - name: Test SAED.Web
        run: dotnet test --configuration Release ./src/SAED.Web/SAED.Web.csproj

      - name: Restore SAED.Api
        run: dotnet restore ./src/SAED.Api/SAED.Api.csproj

      - name: Build SAED.Api
        run: dotnet build --configuration Release --no-restore ./src/SAED.Api/SAED.Api.csproj

      - name: Test SAED.Api
        run: dotnet test --configuration Release ./src/SAED.Api/SAED.Api.csproj

  # publish:
  #   runs-on: ubuntu-latest
  #   needs: ci

  #   steps:
  #     - uses: actions/checkout@v2
      
  #     - name: Deploy to droplet using SSH
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         password: ${{ secrets.PASSWORD }}
  #         # key: ${{ secrets.PRIVATE_KEY }}
  #         debug: true
  #         script: |
  #           logname
  #           sudo systemctl stop saed
  #           cd ${{ secrets.DOCROOT }}
  #           git pull
  #           cd ${{ secrets.DOCROOT }}/SAED.Web/
  #           dotnet build -c Release
  #           dotnet publish -c Release --no-build
  #           cd ${{ secrets.DOCROOT }}/
  #           dotnet-ef database update -s SAED.Web -p SAED.Persistence
  #           sudo systemctl start saed

  #     # - name: Invoke deployment hook
  #     #   uses: distributhor/workflow-webhook@v1.0.5
  #     #   env:
  #     #     webhook_url: ${{ secrets.WEBHOOK_URL }}
  #     #     webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
  #     #     webhook_auth: ${{ secrets.WEBHOOK_AUTH }}
      
