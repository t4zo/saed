name: Amazon ECS

on:
  workflow_run:
    workflows: ["docker"]
    branches: [main]
    types:
      - completed
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update ECS Cluster Service
        id: deploy
        run: |
          aws ecs update-service --cluster ${{ secrets.AWS_ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment

  # codedeploy:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.workflow_run.conclusion == 'success' }}

  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ secrets.AWS_REGION }}

  #     - name: Create CodeDeploy Deployment
  #       id: deploy
  #       run: |
  #         aws deploy create-deployment \
  #           --application-name saca \
  #           --deployment-group-name saca-development \
  #           --deployment-config-name CodeDeployDefault.AllAtOnce \
  #           --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
  #           --file-exists-behavior=OVERWRITE \
  #           --auto-rollback-configuration enabled=true,events=DEPLOYMENT_FAILURE
